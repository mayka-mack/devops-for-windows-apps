trigger:
  branches:
    include:
    - master
    - rel/*
  paths:
    exclude:
    - '**/*.md'
    - 'UITests/*'

pr:
  branches:
    include:
    - master
    - rel/*
  paths:
    exclude:
    - '**/*.md'
    - 'UITests/*'

variables:
  buildConfiguration: Release
  buildPlatform: x64
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages'

jobs:
- job: Build
  pool:
    vmImage: windows-latest

  strategy:
    matrix:
      Channel_CD_Web:
        ChannelName: CD-Web
        DistributionUrl: https://mywpfapp.azurewebsites.net/CD
        MsixPackageId: MyWPFApp.DevOpsDemo.CD
        MsixPublisherId: CN=build
        MsixPackageDisplayName: MyWPFApp (CD)
        MsixBuildMode: SideLoadOnly
        MsixGenerateAppInstaller: true

  steps:
  - task: UseDotNet@2
    displayName: Use .NET Core SDK
    inputs:
      version: 7.0.x
      performMultiLevelLookup: true

  - task: DotNetCoreCLI@2
    displayName: .NET Restore
    inputs:
      command: restore
      projects: '**/*.csproj'
      feedsToUse: select

  - task: VSBuild@1
    displayName: 'Build for $(BuildConfiguration)'
    inputs:
      solution: '*.sln'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
      msbuildArgs: >
        /p:AppInstallerUri=$(DistributionUrl)
        /p:UapAppxPackageBuildMode=$(MsixBuildMode)
        /p:GenerateAppInstallerFile=$(MsixGenerateAppInstaller)
      maximumCpuCount: false

  - task: CopyFiles@2
    displayName: Copy files
    inputs:
      SourceFolder: '$(appxPackageDir)'
      Contents: |
        **\*.msixbundle
        *.appinstaller
      TargetFolder: MyWPFApp.Package/Bundle

  - task: PublishPipelineArtifact@0
    displayName: Publish files
    inputs:
      artifactName: $(ChannelName)
      targetPath: MyWPFApp.Package/Bundle
